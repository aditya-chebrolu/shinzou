{"title":"Java Comparator and Comparison","language":"java","sections":[{"subtitle":"Comparable Interface","snippets":[{"description":["Implementing <span class=\"highlighted\">Comparable</span>"],"code":"class Person implements Comparable<Person> {\n    private String name;\n    private int age;\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n\n    @Override\n    public int compareTo(Person other) {\n        return Integer.compare(this.age, other.age);\n    }\n\n    // Getters and toString() method\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">class</span><span style=\"color:#8FBCBB\"> Person</span><span style=\"color:#81A1C1\"> implements</span><span style=\"color:#8FBCBB;font-weight:bold\"> Comparable</span><span style=\"color:#ECEFF4\">&#x3C;</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#ECEFF4\">></span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    private</span><span style=\"color:#8FBCBB\"> String</span><span style=\"color:#D8DEE9\"> name</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    private</span><span style=\"color:#81A1C1\"> int</span><span style=\"color:#D8DEE9\"> age</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    public</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#8FBCBB\">String</span><span style=\"color:#D8DEE9\"> name</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#81A1C1\"> int</span><span style=\"color:#D8DEE9\"> age</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        this</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\">name</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9FF\"> name</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        this</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\">age</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9FF\"> age</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    @</span><span style=\"color:#D08770\">Override</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    public</span><span style=\"color:#81A1C1\"> int</span><span style=\"color:#88C0D0\"> compareTo</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#D8DEE9\"> other</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        return</span><span style=\"color:#D8DEE9\"> Integer</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">this</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\">age</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#D8DEE9\"> other</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\">age</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#616E88\">    // Getters and toString() method</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"},{"description":["Sorting with <span class=\"highlighted\">Comparable</span>"],"code":"List<Person> people = new ArrayList<>();\npeople.add(new Person(\"Alice\", 30));\npeople.add(new Person(\"Bob\", 25));\npeople.add(new Person(\"Charlie\", 35));\n\nCollections.sort(people);\nfor (Person person : people) {\n    System.out.println(person);\n}\n// Output:\n// Person{name='Bob', age=25}\n// Person{name='Alice', age=30}\n// Person{name='Charlie', age=35}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#8FBCBB\">List</span><span style=\"color:#ECEFF4\">&#x3C;</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#ECEFF4\">></span><span style=\"color:#D8DEE9\"> people</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#81A1C1\"> new</span><span style=\"color:#8FBCBB\"> ArrayList</span><span style=\"color:#ECEFF4\">&#x3C;>()</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">people</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">add</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">new</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Alice</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 30</span><span style=\"color:#ECEFF4\">))</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">people</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">add</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">new</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Bob</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 25</span><span style=\"color:#ECEFF4\">))</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">people</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">add</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">new</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Charlie</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 35</span><span style=\"color:#ECEFF4\">))</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">Collections</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">sort</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">people</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">for</span><span style=\"color:#ECEFF4\"> (</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#D8DEE9\"> person</span><span style=\"color:#81A1C1\"> :</span><span style=\"color:#D8DEE9FF\"> people</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">    System</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\">out</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">println</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">person</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">// Output:</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">// Person{name='Bob', age=25}</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">// Person{name='Alice', age=30}</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">// Person{name='Charlie', age=35}</span></span></code></pre></figure>"}]},{"subtitle":"Comparator Interface","snippets":[{"description":["Implementing <span class=\"highlighted\">Comparator</span>"],"code":"class PersonNameComparator implements Comparator<Person> {\n    @Override\n    public int compare(Person p1, Person p2) {\n        return p1.getName().compareTo(p2.getName());\n    }\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">class</span><span style=\"color:#8FBCBB\"> PersonNameComparator</span><span style=\"color:#81A1C1\"> implements</span><span style=\"color:#8FBCBB;font-weight:bold\"> Comparator</span><span style=\"color:#ECEFF4\">&#x3C;</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#ECEFF4\">></span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    @</span><span style=\"color:#D08770\">Override</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    public</span><span style=\"color:#81A1C1\"> int</span><span style=\"color:#88C0D0\"> compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#D8DEE9\"> p1</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#8FBCBB\"> Person</span><span style=\"color:#D8DEE9\"> p2</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        return</span><span style=\"color:#D8DEE9\"> p1</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">getName</span><span style=\"color:#ECEFF4\">().</span><span style=\"color:#88C0D0\">compareTo</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9\">p2</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">getName</span><span style=\"color:#ECEFF4\">())</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"},{"description":["Sorting with <span class=\"highlighted\">Comparator</span>"],"code":"List<Person> people = new ArrayList<>();\npeople.add(new Person(\"Alice\", 30));\npeople.add(new Person(\"Bob\", 25));\npeople.add(new Person(\"Charlie\", 35));\n\nCollections.sort(people, new PersonNameComparator());\nfor (Person person : people) {\n    System.out.println(person);\n}\n// Output:\n// Person{name='Alice', age=30}\n// Person{name='Bob', age=25}\n// Person{name='Charlie', age=35}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#8FBCBB\">List</span><span style=\"color:#ECEFF4\">&#x3C;</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#ECEFF4\">></span><span style=\"color:#D8DEE9\"> people</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#81A1C1\"> new</span><span style=\"color:#8FBCBB\"> ArrayList</span><span style=\"color:#ECEFF4\">&#x3C;>()</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">people</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">add</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">new</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Alice</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 30</span><span style=\"color:#ECEFF4\">))</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">people</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">add</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">new</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Bob</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 25</span><span style=\"color:#ECEFF4\">))</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">people</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">add</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">new</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Charlie</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 35</span><span style=\"color:#ECEFF4\">))</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">Collections</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">sort</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">people</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#81A1C1\"> new</span><span style=\"color:#88C0D0\"> PersonNameComparator</span><span style=\"color:#ECEFF4\">())</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">for</span><span style=\"color:#ECEFF4\"> (</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#D8DEE9\"> person</span><span style=\"color:#81A1C1\"> :</span><span style=\"color:#D8DEE9FF\"> people</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">    System</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#D8DEE9\">out</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">println</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">person</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">// Output:</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">// Person{name='Alice', age=30}</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">// Person{name='Bob', age=25}</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">// Person{name='Charlie', age=35}</span></span></code></pre></figure>"},{"description":["Using Anonymous <span class=\"highlighted\">Comparator</span>"],"code":"Collections.sort(people, new Comparator<Person>() {\n    @Override\n    public int compare(Person p1, Person p2) {\n        return Integer.compare(p1.getAge(), p2.getAge());\n    }\n});","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#D8DEE9\">Collections</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">sort</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">people</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#81A1C1\"> new</span><span style=\"color:#8FBCBB\"> Comparator</span><span style=\"color:#ECEFF4\">&#x3C;</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#ECEFF4\">>()</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    @</span><span style=\"color:#D08770\">Override</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    public</span><span style=\"color:#81A1C1\"> int</span><span style=\"color:#88C0D0\"> compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#D8DEE9\"> p1</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#8FBCBB\"> Person</span><span style=\"color:#D8DEE9\"> p2</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        return</span><span style=\"color:#D8DEE9\"> Integer</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9\">p1</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">getAge</span><span style=\"color:#ECEFF4\">(),</span><span style=\"color:#D8DEE9\"> p2</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">getAge</span><span style=\"color:#ECEFF4\">())</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">})</span><span style=\"color:#81A1C1\">;</span></span></code></pre></figure>"},{"description":["Using <span class=\"highlighted\">Lambda Expression</span>"],"code":"Collections.sort(people, (p1, p2) -> p1.getName().compareTo(p2.getName()));","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#D8DEE9\">Collections</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">sort</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">people</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#ECEFF4\"> (</span><span style=\"color:#D8DEE9FF\">p1</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#D8DEE9FF\"> p2</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#8FBCBB\"> -></span><span style=\"color:#D8DEE9\"> p1</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">getName</span><span style=\"color:#ECEFF4\">().</span><span style=\"color:#88C0D0\">compareTo</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9\">p2</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">getName</span><span style=\"color:#ECEFF4\">()))</span><span style=\"color:#81A1C1\">;</span></span></code></pre></figure>"}]},{"subtitle":"Common Comparison Methods","snippets":[{"description":["Comparing <span class=\"highlighted\">Integers</span>: Returns -1 if the first value is less than the second, 0 if equal, and 1 if greater"],"code":"int result1 = Integer.compare(10, 20); // -1\nint result2 = Integer.compare(20, 10); // 1\nint result3 = Integer.compare(10, 10); // 0","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result1</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9\"> Integer</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#B48EAD\">10</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 20</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // -1</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result2</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9\"> Integer</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#B48EAD\">20</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 10</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // 1</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result3</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9\"> Integer</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#B48EAD\">10</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 10</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // 0</span></span></code></pre></figure>"},{"description":["Comparing <span class=\"highlighted\">Doubles</span>: Returns -1 if the first value is less than the second, 0 if equal, and 1 if greater"],"code":"int result1 = Double.compare(10.5, 20.5); // -1\nint result2 = Double.compare(20.5, 10.5); // 1\nint result3 = Double.compare(10.5, 10.5); // 0","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result1</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9\"> Double</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#B48EAD\">10.5</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 20.5</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // -1</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result2</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9\"> Double</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#B48EAD\">20.5</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 10.5</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // 1</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result3</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9\"> Double</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compare</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#B48EAD\">10.5</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#B48EAD\"> 10.5</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // 0</span></span></code></pre></figure>"},{"description":["Comparing <span class=\"highlighted\">Strings</span>: Returns -1 if the first string is lexicographically less than the second, 0 if equal, and 1 if greater"],"code":"int result1 = \"apple\".compareTo(\"banana\"); // -1\nint result2 = \"banana\".compareTo(\"apple\"); // 1\nint result3 = \"apple\".compareTo(\"apple\"); // 0","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result1</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">apple</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compareTo</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">banana</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // -1</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result2</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">banana</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compareTo</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">apple</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // 1</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">int</span><span style=\"color:#D8DEE9\"> result3</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">apple</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">compareTo</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">apple</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // 0</span></span></code></pre></figure>"},{"description":["Comparing with <span class=\"highlighted\">nullsFirst</span> and <span class=\"highlighted\">nullsLast</span>: Sorts with nulls first or last respectively"],"code":"List<String> strings = Arrays.asList(\"apple\", null, \"banana\");\nCollections.sort(strings, Comparator.nullsFirst(String::compareTo)); // [null, \"apple\", \"banana\"]\nCollections.sort(strings, Comparator.nullsLast(String::compareTo)); // [\"apple\", \"banana\", null]","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#8FBCBB\">List</span><span style=\"color:#ECEFF4\">&#x3C;</span><span style=\"color:#8FBCBB\">String</span><span style=\"color:#ECEFF4\">></span><span style=\"color:#D8DEE9\"> strings</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9\"> Arrays</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">asList</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">apple</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#81A1C1\"> null</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">banana</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">Collections</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">sort</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">strings</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#D8DEE9\"> Comparator</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">nullsFirst</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">String</span><span style=\"color:#81A1C1\">::</span><span style=\"color:#D8DEE9FF\">compareTo</span><span style=\"color:#ECEFF4\">))</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // [null, \"apple\", \"banana\"]</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">Collections</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">sort</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">strings</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#D8DEE9\"> Comparator</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">nullsLast</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">String</span><span style=\"color:#81A1C1\">::</span><span style=\"color:#D8DEE9FF\">compareTo</span><span style=\"color:#ECEFF4\">))</span><span style=\"color:#81A1C1\">;</span><span style=\"color:#616E88\"> // [\"apple\", \"banana\", null]</span></span></code></pre></figure>"}]},{"subtitle":"Comparator Chaining","snippets":[{"description":["Chaining <span class=\"highlighted\">Comparators</span>: First compares by name, then by age"],"code":"Comparator<Person> comparator = Comparator.comparing(Person::getName)\n                                          .thenComparing(Person::getAge);\n\nCollections.sort(people, comparator);","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"java\" data-theme=\"nord\"><code data-language=\"java\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#8FBCBB\">Comparator</span><span style=\"color:#ECEFF4\">&#x3C;</span><span style=\"color:#8FBCBB\">Person</span><span style=\"color:#ECEFF4\">></span><span style=\"color:#D8DEE9\"> comparator</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9\"> Comparator</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">comparing</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">Person</span><span style=\"color:#81A1C1\">::</span><span style=\"color:#D8DEE9FF\">getName</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">                                          .</span><span style=\"color:#88C0D0\">thenComparing</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">Person</span><span style=\"color:#81A1C1\">::</span><span style=\"color:#D8DEE9FF\">getAge</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9\">Collections</span><span style=\"color:#ECEFF4\">.</span><span style=\"color:#88C0D0\">sort</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">people</span><span style=\"color:#ECEFF4\">,</span><span style=\"color:#D8DEE9FF\"> comparator</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\">;</span></span></code></pre></figure>"}]}]}