{"title":"Swift Structs Cheat Sheet","language":"swift","sections":[{"subtitle":"Basic Struct","snippets":[{"description":"Defining a basic struct","code":"struct Person {\n    var name: String\n    var age: Int\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> Person </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> name: </span><span style=\"color:#8FBCBB\">String</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> age: </span><span style=\"color:#8FBCBB\">Int</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"}]},{"subtitle":"Initialization","snippets":[{"description":"Memberwise initializer","code":"let person = Person(name: \"John\", age: 30)","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> person </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">name</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">John</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#D8DEE9FF\">, </span><span style=\"color:#88C0D0\">age</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#B48EAD\"> 30</span><span style=\"color:#ECEFF4\">)</span></span></code></pre></figure>"},{"description":"Custom initializer","code":"struct Person {\n    var name: String\n    var age: Int\n\n    init(name: String, age: Int) {\n        self.name = name\n        self.age = age\n    }\n}\n\nlet person = Person(name: \"John\", age: 30)","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> Person </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> name: </span><span style=\"color:#8FBCBB\">String</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> age: </span><span style=\"color:#8FBCBB\">Int</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    init</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">name</span><span style=\"color:#D8DEE9FF\">: </span><span style=\"color:#8FBCBB\">String</span><span style=\"color:#D8DEE9FF\">, </span><span style=\"color:#88C0D0\">age</span><span style=\"color:#D8DEE9FF\">: </span><span style=\"color:#8FBCBB\">Int</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        self</span><span style=\"color:#D8DEE9FF\">.</span><span style=\"color:#D8DEE9\">name</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9FF\"> name</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        self</span><span style=\"color:#D8DEE9FF\">.</span><span style=\"color:#D8DEE9\">age</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#D8DEE9FF\"> age</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> person </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">name</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">John</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#D8DEE9FF\">, </span><span style=\"color:#88C0D0\">age</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#B48EAD\"> 30</span><span style=\"color:#ECEFF4\">)</span></span></code></pre></figure>"}]},{"subtitle":"Methods","snippets":[{"description":"Defining a method","code":"struct Person {\n    var name: String\n    var age: Int\n\n    func greet() -> String {\n        return \"Hello, my name is \\(name) and I am \\(age) years old.\"\n    }\n}\n\nlet person = Person(name: \"John\", age: 30)\nprint(person.greet())","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> Person </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> name: </span><span style=\"color:#8FBCBB\">String</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> age: </span><span style=\"color:#8FBCBB\">Int</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    func</span><span style=\"color:#88C0D0\"> greet</span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#81A1C1\"> -></span><span style=\"color:#8FBCBB\"> String</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        return</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">Hello, my name is </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">name</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#A3BE8C\"> and I am </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">age</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#A3BE8C\"> years old.</span><span style=\"color:#ECEFF4\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> person </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">name</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">John</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#D8DEE9FF\">, </span><span style=\"color:#88C0D0\">age</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#B48EAD\"> 30</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">person.</span><span style=\"color:#88C0D0\">greet</span><span style=\"color:#ECEFF4\">())</span></span></code></pre></figure>"},{"description":"Mutating method","code":"struct Counter {\n    var count: Int = 0\n\n    mutating func increment() {\n        count += 1\n    }\n}\n\nvar counter = Counter()\ncounter.increment()\nprint(counter.count)","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> Counter </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> count: </span><span style=\"color:#8FBCBB\">Int</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#B48EAD\"> 0</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    mutating</span><span style=\"color:#81A1C1\"> func</span><span style=\"color:#88C0D0\"> increment</span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9FF\">        count </span><span style=\"color:#81A1C1\">+=</span><span style=\"color:#B48EAD\"> 1</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">var</span><span style=\"color:#D8DEE9FF\"> counter </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#88C0D0\"> Counter</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9FF\">counter.</span><span style=\"color:#88C0D0\">increment</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">counter.count</span><span style=\"color:#ECEFF4\">)</span></span></code></pre></figure>"}]},{"subtitle":"Computed Properties","snippets":[{"description":"Defining computed properties","code":"struct Rectangle {\n    var width: Double\n    var height: Double\n\n    var area: Double {\n        return width * height\n    }\n}\n\nlet rect = Rectangle(width: 5.0, height: 4.0)\nprint(rect.area)","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> Rectangle </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> width: </span><span style=\"color:#8FBCBB\">Double</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> height: </span><span style=\"color:#8FBCBB\">Double</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> area: </span><span style=\"color:#8FBCBB\">Double</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        return</span><span style=\"color:#D8DEE9FF\"> width </span><span style=\"color:#81A1C1\">*</span><span style=\"color:#D8DEE9FF\"> height</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> rect </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#88C0D0\"> Rectangle</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">width</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#B48EAD\"> 5.0</span><span style=\"color:#D8DEE9FF\">, </span><span style=\"color:#88C0D0\">height</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#B48EAD\"> 4.0</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">rect.</span><span style=\"color:#D8DEE9\">area</span><span style=\"color:#ECEFF4\">)</span></span></code></pre></figure>"}]},{"subtitle":"Property Observers","snippets":[{"description":"Using willSet and didSet","code":"struct StepCounter {\n    var totalSteps: Int = 0 {\n        willSet(newTotalSteps) {\n            print(\"About to set totalSteps to \\(newTotalSteps)\")\n        }\n        didSet {\n            if totalSteps > oldValue {\n                print(\"Added \\(totalSteps - oldValue) steps\")\n            }\n        }\n    }\n}\n\nvar stepCounter = StepCounter()\nstepCounter.totalSteps = 10\nstepCounter.totalSteps = 15","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> StepCounter </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> totalSteps: </span><span style=\"color:#8FBCBB\">Int</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#B48EAD\"> 0</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        willSet</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">newTotalSteps</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">            print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">About to set totalSteps to </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">newTotalSteps</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">        }</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        didSet</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">            if</span><span style=\"color:#D8DEE9FF\"> totalSteps </span><span style=\"color:#81A1C1\">></span><span style=\"color:#D8DEE9FF\"> oldValue </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">                print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Added </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">totalSteps </span><span style=\"color:#81A1C1\">-</span><span style=\"color:#A3BE8C\"> oldValue</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#A3BE8C\"> steps</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">            }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">        }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">var</span><span style=\"color:#D8DEE9FF\"> stepCounter </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#88C0D0\"> StepCounter</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9FF\">stepCounter.</span><span style=\"color:#D8DEE9\">totalSteps</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#B48EAD\"> 10</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9FF\">stepCounter.</span><span style=\"color:#D8DEE9\">totalSteps</span><span style=\"color:#81A1C1\"> =</span><span style=\"color:#B48EAD\"> 15</span></span></code></pre></figure>"}]},{"subtitle":"Static Properties and Methods","snippets":[{"description":"Defining static properties and methods","code":"struct SomeStruct {\n    static var storedTypeProperty = \"Some value.\"\n    static var computedTypeProperty: Int {\n        return 1\n    }\n    static func typeMethod() {\n        print(\"This is a type method.\")\n    }\n}\n\nprint(SomeStruct.storedTypeProperty)\nSomeStruct.typeMethod()","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> SomeStruct </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    static</span><span style=\"color:#81A1C1\"> var</span><span style=\"color:#D8DEE9FF\"> storedTypeProperty </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">Some value.</span><span style=\"color:#ECEFF4\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    static</span><span style=\"color:#81A1C1\"> var</span><span style=\"color:#D8DEE9FF\"> computedTypeProperty: </span><span style=\"color:#8FBCBB\">Int</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        return</span><span style=\"color:#B48EAD\"> 1</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    static</span><span style=\"color:#81A1C1\"> func</span><span style=\"color:#88C0D0\"> typeMethod</span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">        print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">This is a type method.</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">SomeStruct.</span><span style=\"color:#D8DEE9\">storedTypeProperty</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#D8DEE9FF\">SomeStruct.</span><span style=\"color:#88C0D0\">typeMethod</span><span style=\"color:#ECEFF4\">()</span></span></code></pre></figure>"}]},{"subtitle":"Nested Types","snippets":[{"description":"Defining nested types","code":"struct OuterStruct {\n    struct NestedStruct {\n        var nestedProperty: Int\n    }\n    var outerProperty: NestedStruct\n}\n\nlet nestedInstance = OuterStruct.NestedStruct(nestedProperty: 5)\nlet outerInstance = OuterStruct(outerProperty: nestedInstance)\nprint(outerInstance.outerProperty.nestedProperty)","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> OuterStruct </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    struct</span><span style=\"color:#D8DEE9FF\"> NestedStruct </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        var</span><span style=\"color:#D8DEE9FF\"> nestedProperty: </span><span style=\"color:#8FBCBB\">Int</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> outerProperty: NestedStruct</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> nestedInstance </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#D8DEE9FF\"> OuterStruct.</span><span style=\"color:#88C0D0\">NestedStruct</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">nestedProperty</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#B48EAD\"> 5</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> outerInstance </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#88C0D0\"> OuterStruct</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">outerProperty</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#D8DEE9FF\"> nestedInstance</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">outerInstance.</span><span style=\"color:#D8DEE9\">outerProperty</span><span style=\"color:#D8DEE9FF\">.</span><span style=\"color:#D8DEE9\">nestedProperty</span><span style=\"color:#ECEFF4\">)</span></span></code></pre></figure>"}]},{"subtitle":"Conforming to Protocols","snippets":[{"description":"Conforming to a protocol","code":"protocol Greetable {\n    func greet() -> String\n}\n\nstruct Person: Greetable {\n    var name: String\n    var age: Int\n\n    func greet() -> String {\n        return \"Hello, my name is \\(name) and I am \\(age) years old.\"\n    }\n}\n\nlet person = Person(name: \"John\", age: 30)\nprint(person.greet())","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">protocol</span><span style=\"color:#D8DEE9FF\"> Greetable </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    func</span><span style=\"color:#88C0D0\"> greet</span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#81A1C1\"> -></span><span style=\"color:#8FBCBB\"> String</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> Person</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#8FBCBB;font-weight:bold\"> Greetable </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> name: </span><span style=\"color:#8FBCBB\">String</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    var</span><span style=\"color:#D8DEE9FF\"> age: </span><span style=\"color:#8FBCBB\">Int</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    func</span><span style=\"color:#88C0D0\"> greet</span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#81A1C1\"> -></span><span style=\"color:#8FBCBB\"> String</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">        return</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">Hello, my name is </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">name</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#A3BE8C\"> and I am </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">age</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#A3BE8C\"> years old.</span><span style=\"color:#ECEFF4\">\"</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> person </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#88C0D0\"> Person</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">name</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#ECEFF4\"> \"</span><span style=\"color:#A3BE8C\">John</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#D8DEE9FF\">, </span><span style=\"color:#88C0D0\">age</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#B48EAD\"> 30</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#D8DEE9FF\">person.</span><span style=\"color:#88C0D0\">greet</span><span style=\"color:#ECEFF4\">())</span></span></code></pre></figure>"}]}]}