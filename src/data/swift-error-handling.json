{"title":"SwiftUI Error Handling Cheat Sheet","language":"swift","sections":[{"subtitle":"Basic Try-Catch","snippets":[{"description":["Basic usage of try-catch for error handling."],"code":"do {\n    try someFunctionThatThrows()\n} catch {\n    print(\"An error occurred: \\(error)\")\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">do</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    try</span><span style=\"color:#88C0D0\"> someFunctionThatThrows</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> catch</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">An error occurred: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">error</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"}]},{"subtitle":"Try? for Optional Handling","snippets":[{"description":["Using try? to convert errors to optional values."],"code":"let result = try? someFunctionThatThrows()\nif let result = result {\n    print(\"Function succeeded: \\(result)\")\n} else {\n    print(\"Function failed\")\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> result </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#81A1C1\"> try?</span><span style=\"color:#88C0D0\"> someFunctionThatThrows</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">if</span><span style=\"color:#81A1C1\"> let</span><span style=\"color:#D8DEE9FF\"> result </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#D8DEE9FF\"> result </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Function succeeded: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">result</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> else</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Function failed</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"}]},{"subtitle":"Try! for Forced Error Handling","snippets":[{"description":["Using try! to force unwrap results, will crash if an error occurs."],"code":"let result = try! someFunctionThatThrows()\nprint(\"Function succeeded: \\(result)\")","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> result </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#81A1C1\"> try!</span><span style=\"color:#88C0D0\"> someFunctionThatThrows</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Function succeeded: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">result</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span></code></pre></figure>"}]},{"subtitle":"Custom Error Types","snippets":[{"description":["Defining and using custom error types."],"code":"enum MyError: Error {\n    case runtimeError(String)\n}\n\ndo {\n    throw MyError.runtimeError(\"A runtime error occurred\")\n} catch MyError.runtimeError(let message) {\n    print(\"Runtime error: \\(message)\")\n} catch {\n    print(\"An unknown error occurred: \\(error)\")\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">enum</span><span style=\"color:#D8DEE9FF\"> MyError</span><span style=\"color:#ECEFF4\">:</span><span style=\"color:#8FBCBB;font-weight:bold\"> Error </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    case</span><span style=\"color:#D8DEE9\"> runtimeError</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#8FBCBB\">String</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">do</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    throw</span><span style=\"color:#D8DEE9FF\"> MyError.</span><span style=\"color:#88C0D0\">runtimeError</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">A runtime error occurred</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> catch</span><span style=\"color:#D8DEE9FF\"> MyError.</span><span style=\"color:#88C0D0\">runtimeError</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> message</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Runtime error: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">message</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> catch</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">An unknown error occurred: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">error</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"}]},{"subtitle":"Throwing Functions","snippets":[{"description":["Declaring and using functions that can throw errors."],"code":"func canThrowError() throws {\n    // Code that might throw an error\n}\n\ndo {\n    try canThrowError()\n    print(\"Function succeeded\")\n} catch {\n    print(\"An error occurred: \\(error)\")\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">func</span><span style=\"color:#88C0D0\"> canThrowError</span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#81A1C1\"> throws</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">    // Code that might throw an error</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">do</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    try</span><span style=\"color:#88C0D0\"> canThrowError</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Function succeeded</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> catch</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">An error occurred: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">error</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"}]},{"subtitle":"Rethrows","snippets":[{"description":["Using rethrows to propagate errors from parameter functions."],"code":"func someFunction(callback: () throws -> Void) rethrows {\n    try callback()\n}\n\ndo {\n    try someFunction {\n        // Code that might throw an error\n    }\n} catch {\n    print(\"An error occurred: \\(error)\")\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">func</span><span style=\"color:#88C0D0\"> someFunction</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#88C0D0\">callback</span><span style=\"color:#D8DEE9FF\">: </span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#81A1C1\"> throws</span><span style=\"color:#81A1C1\"> -></span><span style=\"color:#8FBCBB\"> Void</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#81A1C1\"> rethrows</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    try</span><span style=\"color:#88C0D0\"> callback</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">do</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    try</span><span style=\"color:#88C0D0\"> someFunction</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">        // Code that might throw an error</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> catch</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">An error occurred: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">error</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"}]},{"subtitle":"Do-Catch with Multiple Catch Blocks","snippets":[{"description":["Using multiple catch blocks to handle different errors."],"code":"do {\n    try someFunctionThatThrows()\n} catch MyError.runtimeError(let message) {\n    print(\"Runtime error: \\(message)\")\n} catch {\n    print(\"An unknown error occurred: \\(error)\")\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">do</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    try</span><span style=\"color:#88C0D0\"> someFunctionThatThrows</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> catch</span><span style=\"color:#D8DEE9FF\"> MyError.</span><span style=\"color:#88C0D0\">runtimeError</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#81A1C1\">let</span><span style=\"color:#D8DEE9FF\"> message</span><span style=\"color:#ECEFF4\">)</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Runtime error: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">message</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> catch</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">An unknown error occurred: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">error</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"}]},{"subtitle":"Throwing Initializers","snippets":[{"description":["Declaring and using initializers that can throw errors."],"code":"struct SomeStruct {\n    init() throws {\n        // Code that might throw an error\n    }\n}\n\ndo {\n    let instance = try SomeStruct()\n    print(\"Initialization succeeded\")\n} catch {\n    print(\"An error occurred: \\(error)\")\n}","codeHtml":"<figure data-rehype-pretty-code-figure=\"\"><pre tabindex=\"0\" data-language=\"swift\" data-theme=\"nord\"><code data-language=\"swift\" data-theme=\"nord\"><span data-line=\"\"><span style=\"color:#81A1C1\">struct</span><span style=\"color:#D8DEE9FF\"> SomeStruct </span><span style=\"color:#ECEFF4\">{</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    init</span><span style=\"color:#ECEFF4\">()</span><span style=\"color:#81A1C1\"> throws</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#616E88\">        // Code that might throw an error</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">    }</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span>\n<span data-line=\"\"></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">do</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#81A1C1\">    let</span><span style=\"color:#D8DEE9FF\"> instance </span><span style=\"color:#81A1C1\">=</span><span style=\"color:#81A1C1\"> try</span><span style=\"color:#88C0D0\"> SomeStruct</span><span style=\"color:#ECEFF4\">()</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">Initialization succeeded</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span><span style=\"color:#81A1C1\"> catch</span><span style=\"color:#ECEFF4\"> {</span></span>\n<span data-line=\"\"><span style=\"color:#88C0D0\">    print</span><span style=\"color:#ECEFF4\">(</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#A3BE8C\">An error occurred: </span><span style=\"color:#81A1C1\">\\(</span><span style=\"color:#A3BE8C\">error</span><span style=\"color:#81A1C1\">)</span><span style=\"color:#ECEFF4\">\"</span><span style=\"color:#ECEFF4\">)</span></span>\n<span data-line=\"\"><span style=\"color:#ECEFF4\">}</span></span></code></pre></figure>"}]}]}